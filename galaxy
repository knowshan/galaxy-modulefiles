#%Module

# galaxy module file
set galaxyver 1.0
set galaxyroot /share/apps/galaxy
set url "https://galaxy.uabgrid.uab.edu/"
set msg "This module adds Galaxy v$galaxyver to various paths\n\nPython Official Site: $url\n"


# List modules that conflict with this module - 'module load' will fail if 
# conflicting modules are already loaded
conflict python/python-2.7 python/python-2.6

# Functions!
proc ModulesHelp { } {
   puts stderr "$msg"
}

# returns list of submodule files in given module directory
proc getSubmoduleFiles { module_directory } {
  list module_files []
  set _module_name [file tail $module_directory]
  set _module_files_full_path [glob -directory $module_directory -type f -- "$_module_name-submodule-*"]
  # following forreach is useless, as there is no string/path modification inside it
  foreach _module_file $_module_files_full_path {
    # lappend module_files [file tail $path]
    lappend module_files $_module_file
  }
  return $module_files
}

# The code-logic can be implemented in less number of lines, however, I prefer
# verbose code compared to esoteric language constructs.

# loads module files passed as a list
proc loadModuleFiles { module_files } {
  foreach _module_file $module_files {
    module load $_module_file
  }
}

# set galaxy env
setenv GALAXY_BASEDIR $galaxyroot
setenv GALAXY_INSTALL $galaxyroot/galaxy-latest
setenv GALAXY_TOOLS $galaxyroot/galaxy-tools
setenv GALAXY_PYTHON $galaxyroot/python

# set shared $TEMP for galaxy
setenv TEMP /lustre/project/galaxy/temp
setenv TMP /lustre/project/galaxy/temp
setenv TMPDIR /lustre/project/galaxy/temp

# Get galaxy tools in PATH - prepend
prepend-path PATH $galaxyroot/galaxy-tools/bin
# JAVA_HOME to PATH added - SSP 2011-06-17 - gave
#prepend-path PATH $JAVA_HOME/bin
prepend-path LD_LIBRARY_PATH $galaxyroot/galaxy-tools/lib:$galaxyroot/galaxy-tools/lib64:$galaxyroot/galaxy-tools/lib64/R

module-whatis   "$msg"

# Get galaxy submodules - python, tool-specifics etc
set mfiles [getSubmoduleFiles "/etc/modulefiles/galaxy/"]
# load list of modules
loadModuleFiles $mfiles

# End-of Module file!
